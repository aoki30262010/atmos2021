# Make file for radiative/convective climate model

###############################
# Set variables
###############################

PLATFORM = osx

# COMPILATION FLAGS:
#FC = ifort
#FCFLAG = -O3 -parallel -i8 -r8
# For debugging, use this flag set instead:
#FCFLAG = -i8 -r8 -debug -fp-stack-check -check-bounds -g -traceback -heap-arrays -gen-interfaces -warn interfaces -check arg_temp_created -align all -Bstatic
# more debugging options
#FCFLAG = -r8 -i8 -debug -g -diag-enable sv-include

#optimized
FC = gfortran
FCFLAG = -O3 -I. -fno-automatic -ftree-vectorize -fdefault-integer-8 -fdefault-real-8 -ffpe-trap=invalid -std=legacy
#debugging versions
#FCFLAG = -g -fbounds-check -Wall -fbacktrace -finit-real=nan
#FCFLAG = -g -fno-automatic -ftrapv -fbounds-check -O
#FCFLAG = -g -fno-automatic -Wuninitialized -fbounds-check -O -ftrapv
#FCFLAG = -g -fno-automatic -Wuninitialized -fbounds-check -O -ftrapv -Wall -fdefault-integer-8 -ffpe-trap=invalid -fdefault-real-8 -I.



OUTPUT = Clima.run
CDOTOC = CLIMA/OBJECT_CLIMA
CDOTOR = CLIMA/OBJECT_RRTM

# Main file
CSUR = ClimaMain

# Subdirectories (CAPS) and subroutines (lower case)
CPATHR = CLIMA/RRTM
CRTM = rrtm
CREG = rtreg
CRTR = rtr
CATM = rrtatm
CSET = setcoef
CTAU = taumol
CRGC = rtregcld
CRTC = rtrcld
CUTL = util_$(PLATFORM)
CEXT = extra
CRTX = rtrcldmr
CRGX = rtregcldmr
CCLD = cldprop

# These are the climate code files
CPATH1 = CLIMA/SETUP
CPROF = profile
CREAD = readsol
CSTAR = pickstar
CGRID = grid
CIRES = irexpsums
CINTP = interpsolar
CINOZ = interpozone
CINCO = interpco2cia
CICO2 = interpir
CINC2 = interph2n2cia
CINC3 = interpo2cia
CINC4 = interph2h2cia
COZON = ozone

CPATH2 = CLIMA/CONVEC
CCONV = convec
CSATH = satrat
CRELH = relhum
CSATC = satco2

CPATH3 = CLIMA/RADTRANS
CGASC = gascon
CSOL  = solar
CSOL2 = solarm
CSOL3 = solarox
CSOL4 = solarmox
CINFR = ir
CINFM = irm
CINFME= irme
CRAYL = rayley
CDSTI = delta2strir
CDSTS = delta2str
CMTRX = tridag
CPLAN = planck

CPATH4 = CLIMA/PRTCL
CGRDA = gridaer
CADAT = aerabsdata
CINPA = interpar1

CPATH5 = CLIMA/COUPLE
CTRNT = translatem
COUTP = output_photo
CINPI = input_interp

CPATH6 = CLIMA/PLUME
CPLM = plume
CZERO = zero
CSCPY = scopy
CVINT = vinterp
CRSET = resetr
CSTBC = stabco

OBPATH = $(CDOTOC)/$(CSUR).o \
	 $(CDOTOC)/$(CRTM).o \
	 $(CDOTOC)/$(CREG).o \
	 $(CDOTOC)/$(CRTR).o \
	 $(CDOTOC)/$(CATM).o \
	 $(CDOTOC)/$(CSET).o \
	 $(CDOTOC)/$(CTAU).o \
	 $(CDOTOC)/$(CRGC).o \
	 $(CDOTOC)/$(CRTC).o \
	 $(CDOTOC)/$(CUTL).o \
	 $(CDOTOC)/$(CEXT).o \
	 $(CDOTOC)/$(CRTX).o \
	 $(CDOTOC)/$(CRGX).o \
	 $(CDOTOC)/$(CCLD).o \
	 $(CDOTOC)/$(CPROF).o \
	 $(CDOTOC)/$(CREAD).o \
	 $(CDOTOC)/$(CSTAR).o \
	 $(CDOTOC)/$(CGRID).o \
	 $(CDOTOC)/$(CIRES).o \
	 $(CDOTOC)/$(CINTP).o \
	 $(CDOTOC)/$(CICO2).o \
	 $(CDOTOC)/$(CINC2).o \
	 $(CDOTOC)/$(CINC3).o \
	 $(CDOTOC)/$(CINC4).o \
	 $(CDOTOC)/$(CINOZ).o \
         $(CDOTOC)/$(CINCO).o \
	 $(CDOTOC)/$(COZON).o \
	 $(CDOTOC)/$(CCONV).o \
	 $(CDOTOC)/$(CSATH).o \
	 $(CDOTOC)/$(CRELH).o \
 	 $(CDOTOC)/$(CSATC).o \
	 $(CDOTOC)/$(CGASC).o \
	 $(CDOTOC)/$(CSOL).o  \
	 $(CDOTOC)/$(CSOL2).o  \
	 $(CDOTOC)/$(CSOL3).o  \
	 $(CDOTOC)/$(CSOL4).o  \
	 $(CDOTOC)/$(CINFR).o \
         $(CDOTOC)/$(CINFM).o \
	 $(CDOTOC)/$(CINFME).o \
	 $(CDOTOC)/$(CRAYL).o \
	 $(CDOTOC)/$(CDSTI).o \
	 $(CDOTOC)/$(CDSTS).o \
	 $(CDOTOC)/$(CMTRX).o \
	 $(CDOTOC)/$(CPLAN).o \
	 $(CDOTOC)/$(CGRDA).o \
	 $(CDOTOC)/$(CADAT).o \
	 $(CDOTOC)/$(CINPA).o \
	 $(CDOTOC)/$(CTRNT).o \
	 $(CDOTOC)/$(COUTP).o \
	 $(CDOTOC)/$(CINPI).o \
	 $(CDOTOC)/$(CPLM).o \
	 $(CDOTOC)/$(CZERO).o \
	 $(CDOTOC)/$(CSCPY).o \
	 $(CDOTOC)/$(CVINT).o \
	 $(CDOTOC)/$(CRSET).o \
	 $(CDOTOC)/$(CSTBC).o

###############################
# Load line
###############################

$(OUTPUT) : $(OBPATH) 
	$(FC) $(FCFLAG) -o $(OUTPUT) $(OBPATH)

###############################
# Object compile lines
###############################

$(CDOTOC)/$(CSUR).o : $(CSUR).f
	$(FC) $(FCFLAG) -c $(CSUR).f
	\mv $(CSUR).o $(CDOTOC)

$(CDOTOC)/$(CPROF).o : $(CPATH1)/$(CPROF).f
	$(FC) $(FCFLAG) -c $(CPATH1)/$(CPROF).f
	\mv $(CPROF).o $(CDOTOC)

$(CDOTOC)/$(CREAD).o : $(CPATH1)/$(CREAD).f
	$(FC) $(FCFLAG) -c $(CPATH1)/$(CREAD).f
	\mv $(CREAD).o $(CDOTOC)

$(CDOTOC)/$(CSTAR).o : $(CPATH1)/$(CSTAR).f
	$(FC) $(FCFLAG) -c $(CPATH1)/$(CSTAR).f
	\mv $(CSTAR).o $(CDOTOC)

$(CDOTOC)/$(CGRID).o : $(CPATH1)/$(CGRID).f
	$(FC) $(FCFLAG) -c $(CPATH1)/$(CGRID).f
	\mv $(CGRID).o $(CDOTOC)

$(CDOTOC)/$(CIRES).o : $(CPATH1)/$(CIRES).f
	$(FC) $(FCFLAG) -c $(CPATH1)/$(CIRES).f
	\mv $(CIRES).o $(CDOTOC)

$(CDOTOC)/$(CINTP).o : $(CPATH1)/$(CINTP).f
	$(FC) $(FCFLAG) -c $(CPATH1)/$(CINTP).f
	\mv $(CINTP).o $(CDOTOC)

$(CDOTOC)/$(CICO2).o : $(CPATH1)/$(CICO2).f
	$(FC) $(FCFLAG) -c $(CPATH1)/$(CICO2).f
	\mv $(CICO2).o $(CDOTOC)

$(CDOTOC)/$(CINC2).o : $(CPATH1)/$(CINC2).f
	$(FC) $(FCFLAG) -c $(CPATH1)/$(CINC2).f
	\mv $(CINC2).o $(CDOTOC)

$(CDOTOC)/$(CINC3).o : $(CPATH1)/$(CINC3).f
	$(FC) $(FCFLAG) -c $(CPATH1)/$(CINC3).f
	\mv $(CINC3).o $(CDOTOC)

$(CDOTOC)/$(CINC4).o : $(CPATH1)/$(CINC4).f
	$(FC) $(FCFLAG) -c $(CPATH1)/$(CINC4).f
	\mv $(CINC4).o $(CDOTOC)

$(CDOTOC)/$(CINOZ).o : $(CPATH1)/$(CINOZ).f
	$(FC) $(FCFLAG) -c $(CPATH1)/$(CINOZ).f
	\mv $(CINOZ).o $(CDOTOC)

$(CDOTOC)/$(CINCO).o : $(CPATH1)/$(CINCO).f
	$(FC) $(FCFLAG) -c $(CPATH1)/$(CINCO).f
	\mv $(CINCO).o $(CDOTOC)

$(CDOTOC)/$(COZON).o : $(CPATH1)/$(COZON).f
	$(FC) $(FCFLAG) -c $(CPATH1)/$(COZON).f
	\mv $(COZON).o $(CDOTOC)

$(CDOTOC)/$(CCONV).o : $(CPATH2)/$(CCONV).f
	$(FC) $(FCFLAG) -c $(CPATH2)/$(CCONV).f
	\mv $(CCONV).o $(CDOTOC)

$(CDOTOC)/$(CSATH).o : $(CPATH2)/$(CSATH).f
	$(FC) $(FCFLAG) -c $(CPATH2)/$(CSATH).f
	\mv $(CSATH).o $(CDOTOC)

$(CDOTOC)/$(CRELH).o : $(CPATH2)/$(CRELH).f
	$(FC) $(FCFLAG) -c $(CPATH2)/$(CRELH).f
	\mv $(CRELH).o $(CDOTOC)

$(CDOTOC)/$(CSATC).o : $(CPATH2)/$(CSATC).f
	$(FC) $(FCFLAG) -c $(CPATH2)/$(CSATC).f
	\mv $(CSATC).o $(CDOTOC)

$(CDOTOC)/$(CGASC).o : $(CPATH3)/$(CGASC).f
	$(FC) $(FCFLAG) -c $(CPATH3)/$(CGASC).f
	\mv $(CGASC).o $(CDOTOC)

$(CDOTOC)/$(CSOL).o : $(CPATH3)/$(CSOL).f
	$(FC) $(FCFLAG) -c $(CPATH3)/$(CSOL).f
	\mv $(CSOL).o $(CDOTOC)

$(CDOTOC)/$(CSOL2).o : $(CPATH3)/$(CSOL2).f
	$(FC) $(FCFLAG) -c $(CPATH3)/$(CSOL2).f
	\mv $(CSOL2).o $(CDOTOC)

$(CDOTOC)/$(CSOL3).o : $(CPATH3)/$(CSOL3).f
	$(FC) $(FCFLAG) -c $(CPATH3)/$(CSOL3).f
	\mv $(CSOL3).o $(CDOTOC)

$(CDOTOC)/$(CSOL4).o : $(CPATH3)/$(CSOL4).f
	$(FC) $(FCFLAG) -c $(CPATH3)/$(CSOL4).f
	\mv $(CSOL4).o $(CDOTOC)

$(CDOTOC)/$(CINFR).o : $(CPATH3)/$(CINFR).f
	$(FC) $(FCFLAG) -c $(CPATH3)/$(CINFR).f
	\mv $(CINFR).o $(CDOTOC)

$(CDOTOC)/$(CINFM).o : $(CPATH3)/$(CINFM).f
	$(FC) $(FCFLAG) -c $(CPATH3)/$(CINFM).f
	\mv $(CINFM).o $(CDOTOC)

$(CDOTOC)/$(CINFME).o : $(CPATH3)/$(CINFME).f
	$(FC) $(FCFLAG) -c $(CPATH3)/$(CINFME).f
	\mv $(CINFME).o $(CDOTOC)

$(CDOTOC)/$(CRAYL).o : $(CPATH3)/$(CRAYL).f
	$(FC) $(FCFLAG) -c $(CPATH3)/$(CRAYL).f
	\mv $(CRAYL).o $(CDOTOC)

$(CDOTOC)/$(CDSTI).o : $(CPATH3)/$(CDSTI).f
	$(FC) $(FCFLAG) -c $(CPATH3)/$(CDSTI).f
	\mv $(CDSTI).o $(CDOTOC)

$(CDOTOC)/$(CDSTS).o : $(CPATH3)/$(CDSTS).f
	$(FC) $(FCFLAG) -c $(CPATH3)/$(CDSTS).f
	\mv $(CDSTS).o $(CDOTOC)

$(CDOTOC)/$(CMTRX).o : $(CPATH3)/$(CMTRX).f
	$(FC) $(FCFLAG) -c $(CPATH3)/$(CMTRX).f
	\mv $(CMTRX).o $(CDOTOC)

$(CDOTOC)/$(CPLAN).o : $(CPATH3)/$(CPLAN).f
	$(FC) $(FCFLAG) -c $(CPATH3)/$(CPLAN).f
	\mv $(CPLAN).o $(CDOTOC)

$(CDOTOC)/$(CGRDA).o : $(CPATH4)/$(CGRDA).f
	$(FC) $(FCFLAG) -c $(CPATH4)/$(CGRDA).f
	\mv $(CGRDA).o $(CDOTOC)

$(CDOTOC)/$(CADAT).o : $(CPATH4)/$(CADAT).f
	$(FC) $(FCFLAG) -c $(CPATH4)/$(CADAT).f
	\mv $(CADAT).o $(CDOTOC)

$(CDOTOC)/$(CINPA).o : $(CPATH4)/$(CINPA).f
	$(FC) $(FCFLAG) -c $(CPATH4)/$(CINPA).f
	\mv $(CINPA).o $(CDOTOC)

$(CDOTOC)/$(CTRNT).o : $(CPATH5)/$(CTRNT).f
	$(FC) $(FCFLAG) -c $(CPATH5)/$(CTRNT).f
	\mv $(CTRNT).o $(CDOTOC)

$(CDOTOC)/$(COUTP).o : $(CPATH5)/$(COUTP).f
	$(FC) $(FCFLAG) -c $(CPATH5)/$(COUTP).f
	\mv $(COUTP).o $(CDOTOC)

$(CDOTOC)/$(CINPI).o : $(CPATH5)/$(CINPI).f
	$(FC) $(FCFLAG) -c $(CPATH5)/$(CINPI).f
	\mv $(CINPI).o $(CDOTOC)

$(CDOTOC)/$(CPLM).o : $(CPATH6)/$(CPLM).f
	$(FC) $(FCFLAG) -c $(CPATH6)/$(CPLM).f
	\mv $(CPLM).o $(CDOTOC)

$(CDOTOC)/$(CZERO).o : $(CPATH6)/$(CZERO).f
	$(FC) $(FCFLAG) -c $(CPATH6)/$(CZERO).f
	\mv $(CZERO).o $(CDOTOC)

$(CDOTOC)/$(CSCPY).o : $(CPATH6)/$(CSCPY).f
	$(FC) $(FCFLAG) -c $(CPATH6)/$(CSCPY).f
	\mv $(CSCPY).o $(CDOTOC)

$(CDOTOC)/$(CVINT).o : $(CPATH6)/$(CVINT).f
	$(FC) $(FCFLAG) -c $(CPATH6)/$(CVINT).f
	\mv $(CVINT).o $(CDOTOC)
 
$(CDOTOC)/$(CRSET).o : $(CPATH6)/$(CRSET).f
	$(FC) $(FCFLAG) -c $(CPATH6)/$(CRSET).f
	\mv $(CRSET).o $(CDOTOC)

$(CDOTOC)/$(CSTBC).o : $(CPATH6)/$(CSTBC).f
	$(FC) $(FCFLAG) -c $(CPATH6)/$(CSTBC).f
	\mv $(CSTBC).o $(CDOTOC)

# RRTM files
$(CDOTOC)/$(CRTM).o : $(CPATHR)/$(CRTM).f
	$(FC) $(FCFLAG) -c $(CPATHR)/$(CRTM).f
	\mv $(CRTM).o $(CDOTOC)

$(CDOTOC)/$(CRTR).o : $(CPATHR)/$(CRTR).f
	$(FC) $(FCFLAG) -c $(CPATHR)/$(CRTR).f
	\mv $(CRTR).o $(CDOTOC)

$(CDOTOC)/$(CREG).o : $(CPATHR)/$(CREG).f
	$(FC) $(FCFLAG) -c $(CPATHR)/$(CREG).f
	\mv $(CREG).o $(CDOTOC)

$(CDOTOC)/$(CATM).o : $(CPATHR)/$(CATM).f
	$(FC) $(FCFLAG) -c $(CPATHR)/$(CATM).f
	\mv $(CATM).o $(CDOTOC)

$(CDOTOC)/$(CSET).o : $(CPATHR)/$(CSET).f
	$(FC) $(FCFLAG) -c $(CPATHR)/$(CSET).f
	\mv $(CSET).o $(CDOTOC)

$(CDOTOC)/$(CTAU).o : $(CPATHR)/$(CTAU).f
	$(FC) $(FCFLAG) -c $(CPATHR)/$(CTAU).f
	\mv $(CTAU).o $(CDOTOC)

$(CDOTOC)/$(CRGC).o : $(CPATHR)/$(CRGC).f
	$(FC) $(FCFLAG) -c $(CPATHR)/$(CRGC).f
	\mv $(CRGC).o $(CDOTOC)

$(CDOTOC)/$(CRTC).o : $(CPATHR)/$(CRTC).f
	$(FC) $(FCFLAG) -c $(CPATHR)/$(CRTC).f
	\mv $(CRTC).o $(CDOTOC)

$(CDOTOC)/$(CUTL).o : $(CPATHR)/$(CUTL).f
	$(FC) $(FCFLAG) -c $(CPATHR)/$(CUTL).f
	\mv $(CUTL).o $(CDOTOC)

$(CDOTOC)/$(CEXT).o : $(CPATHR)/$(CEXT).f
	$(FC) $(FCFLAG) -c $(CPATHR)/$(CEXT).f
	\mv $(CEXT).o $(CDOTOC)

$(CDOTOC)/$(CRTX).o : $(CPATHR)/$(CRTX).f
	$(FC) $(FCFLAG) -c $(CPATHR)/$(CRTX).f
	\mv $(CRTX).o $(CDOTOC)

$(CDOTOC)/$(CRGX).o : $(CPATHR)/$(CRGX).f
	$(FC) $(FCFLAG) -c $(CPATHR)/$(CRGX).f
	\mv $(CRGX).o $(CDOTOC)

$(CDOTOC)/$(CCLD).o : $(CPATHR)/$(CCLD).f
	$(FC) $(FCFLAG) -c $(CPATHR)/$(CCLD).f
	\mv $(CCLD).o $(CDOTOC)


conclude :
	echo
	echo '================='
	echo '  Makefile done'
	echo '================='

clean:
#	rm $(CDOTOR)/*.o	
	rm $(CDOTOC)/*.o
	rm $(OUTPUT)

new:
	$(MAKE) clean
	$(MAKE)